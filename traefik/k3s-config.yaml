apiVersion: helm.cattle.io/v1
# @see https://docs.k3s.io/helm#customizing-packaged-components-with-helmchartconfig
# /var/lib/rancher/k3s/server/manifests/traefik-config.yaml
# sudo systemctl restart k3s.service
# https://github.com/traefik/traefik-helm-chart/blob/v25.0.0/traefik/values.yaml
kind: HelmChartConfig
metadata:
  name: traefik
  namespace: kube-system
spec:
  valuesContent: |-
    additionalArguments:
      - "--api=true"
      - "--api.dashboard=true"
      - "--providers.providersthrottleduration=5s"
      # - "--providers.file.filename=/etc/traefik/dynamic.yaml"
      # - "--providers.file.watch=true"
      - "--entryPoints.websecure.transport.respondingTimeouts.readTimeout=30s"
      - "--entryPoints.websecure.transport.respondingTimeouts.writeTimeout=10s"
      - "--entryPoints.websecure.transport.lifeCycle.requestAcceptGraceTimeout=10s"
      - "--entryPoints.websecure.transport.lifeCycle.graceTimeOut=60s"
      - "--experimental.plugins.plugindemo.modulename=github.com/traefik/plugindemo"
      - "--experimental.plugins.plugindemo.version=v0.2.2"
    logs:
      access:
        enabled: true
    deployment:
      replicas: 1
      additionalVolumes:
        - name: plugins
    additionalVolumeMounts:
      - name: plugins
        mountPath: /plugins-storage
    tlsStore:
      default:
        defaultCertificate:
          secretName: default-cert
    # volumes:
    #   - name: traefik-dynamic-config
    #     mountPath: /etc/traefik/
    #     type: configMap
    metrics:
      prometheus:
        addEntryPointsLabels: true
        addRoutersLabels: true
        addServicesLabels: true
    ports:
      traefik:
        port: 9000
        exposedPort: 9000
        expose: true
      metrics:
        port: 9900
        exposedPort: 9900
        expose: true
      web:
        port: 8000
        exposedPort: 80
        redirectTo:
            port: websecure
            permanent: true
      websecure:
        port: 8443
        exposedPort: 443
        tls:
          enabled: true
        proxyProtocol:
          trustedIPs: ['172.31.0.0/16', '10.0.0.0/8', '173.245.48.0/20', '103.21.244.0/22', '103.22.200.0/22', '103.31.4.0/22', '141.101.64.0/18', '108.162.192.0/18', '190.93.240.0/20', '188.114.96.0/20', '197.234.240.0/22', '198.41.128.0/17', '162.158.0.0/15', '104.16.0.0/13', '104.24.0.0/14', '172.64.0.0/13', '131.0.72.0/22', '2400:cb00::/32', '2606:4700::/32', '2803:f800::/32', '2405:b500::/32', '2405:8100::/32', '2a06:98c0::/29', '2c0f:f248::/32']
        forwardedHeaders:
          # see: https://developers.cloudflare.com/support/troubleshooting/restoring-visitor-ips/restoring-original-visitor-ips/
          # Start of Clouflare public IP list for HTTP requests, remove this if you don't use it; https://www.cloudflare.com/de-de/ips/
          # AWS VPC default CIDR IPv4: 172.31.0.0/16
          trustedIPs: ['172.31.0.0/16', '10.0.0.0/8', '173.245.48.0/20', '103.21.244.0/22', '103.22.200.0/22', '103.31.4.0/22', '141.101.64.0/18', '108.162.192.0/18', '190.93.240.0/20', '188.114.96.0/20', '197.234.240.0/22', '198.41.128.0/17', '162.158.0.0/15', '104.16.0.0/13', '104.24.0.0/14', '172.64.0.0/13', '131.0.72.0/22', '2400:cb00::/32', '2606:4700::/32', '2803:f800::/32', '2405:b500::/32', '2405:8100::/32', '2a06:98c0::/29', '2c0f:f248::/32']
    ingressRoute:
      dashboard:
        enabled: false
    service:
      enabled: true
      single: true
      type: LoadBalancer
      spec:
        externalTrafficPolicy: Local
    # updateStrategy:
    #   rollingUpdate:
    #     maxUnavailable: 1
    #     maxSurge: 0
    providers:
      kubernetesCRD:
        enabled: true
        throttleDuration: "10s"
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
