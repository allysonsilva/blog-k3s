apiVersion: v1
kind: Namespace
metadata:
  name: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: redis
data:
  redis.conf: |
    bind 0.0.0.0
    tcp-backlog 8192
    timeout 30
    daemonize no
    supervised no
    dir /data
    tcp-keepalive 300
    logfile ""
    maxmemory 2GB
    maxmemory-policy volatile-ttl
    hash-max-listpack-entries 1024
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: redis
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: redis
spec:
  selector:
    app: redis
  type: LoadBalancer
  ports:
  - name: redis-client
    port: 6379
    targetPort: 6379
    protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: redis
  labels:
    tier: backend
    layer: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.4-alpine
        command: ["/usr/local/bin/redis-server"]
        args:
          - "/usr/local/etc/redis/redis.conf"
          - "--port"
          - "6379"
          - "--appendonly"
          - "yes"
          - "--requirepass"
          - "$(REDIS_PASSWORD)"
        env:
        # # Create a Sealed Secret
        # k create secret generic credentials --from-literal="REDIS_PASS=<password>" --namespace=redis --dry-run=client --output yaml | kubeseal > credentials.yaml --format yaml
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: credentials
              key: REDIS_PASS
        resources:
          requests:
            memory: 128Mi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: "1"
        ports:
        - name: client
          containerPort: 6379
        volumeMounts:
        - name: redis-persistent-storage
          mountPath: /data
          readOnly: false
        - name: redis-conf
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        readinessProbe:
          exec:
            command:
            - sh
            - "-c"
            - |-
              redis-cli -a "$REDIS_PASSWORD" --no-auth-warning ping | grep PONG
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 1
        livenessProbe:
          exec:
            command:
            - sh
            - "-c"
            - |-
              redis-cli -a "$REDIS_PASSWORD" --no-auth-warning ping | grep PONG
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 1
      volumes:
      - name: redis-persistent-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-conf
        configMap:
          name: redis-config
