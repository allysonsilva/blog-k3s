apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: queue-worker-post-promotion
spec:
  metrics:
    - name: queue-worker-health
      successCondition: result.exitCode == 0
      provider:
        job:
          spec:
            # O Kubernetes vai permitir uma √∫nica tentativa de reexecu√ß√£o do Pod se ele falhar.
            # Ou seja, o Pod pode executar no m√°ximo 2 vezes no total:
            # 1¬™ execu√ß√£o: se falhar...
            # 2¬™ tentativa (retry): √∫ltima chance.
            # Depois disso, o Job √© marcado como Failed.
            backoffLimit: 1
            template:
              spec:
                restartPolicy: "Never"
                containers:
                  - name: queue-worker
                    image: queue-worker-image
                    env:
                      - name: CONTAINER_ROLE
                        value: "CUSTOM"
                    resources:
                      requests:
                        cpu: 100m
                        memory: 128Mi
                      limits:
                        cpu: 200m
                        memory: 256Mi
                    args:
                      - /bin/bash
                      - -c
                      - |
                        echo
                        echo "üîç ‚ö°Ô∏è Health check do queue-worker iniciado"

                        php artisan queue:work redis --once --queue=queue_default --tries=1 --timeout=10
                        EXIT_CODE=$?

                        if [ $EXIT_CODE -ne 0 ]; then
                          echo
                          echo "‚ùå php artisan queue:work falhou com c√≥digo $EXIT_CODE"
                        else
                          echo
                          echo "‚úÖ php artisan queue:work executado com sucesso!"
                        fi

                        exit $EXIT_CODE
