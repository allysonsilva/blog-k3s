apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: sync-worker-rollout
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  metrics:
    - name: sync-worker
      successCondition: result.exitCode == 0
      provider:
        job:
          spec:
            backoffLimit: 2
            template:
              spec:
                restartPolicy: "Never"
                volumes:
                  - name: argocd-token
                    secret:
                      secretName: argocd-api-token
                containers:
                  - name: trigger-sync
                    image: dwdraju/alpine-curl-jq
                    volumeMounts:
                      - name: argocd-token
                        mountPath: "/mnt/secrets"
                        readOnly: true
                    command:
                      - /bin/sh
                      - -c
                      - |
                        ARGOCD_TOKEN=$(cat /mnt/secrets/ARGOCD_TOKEN)

                        echo "‚û°Ô∏è Disparando sync para aplica√ß√£o queue-worker üõ†Ô∏è"

                        curl -X POST \
                          -H "Authorization: Bearer $ARGOCD_TOKEN" \
                          -H "Content-Type: application/json" \
                          http://argocd-server.argocd.svc.cluster.local/api/v1/applications/queue-worker/sync \
                          -o /dev/null -w "%{http_code}" -s

                        echo "‚è∞ Aguardando aplica√ß√£o ficar Healthy..."

                        sleep 30
                        status=""

                        while [ "$status" != "Healthy" ]; do
                          sleep 10
                          # echo "‚è≥ Waiting for queue-worker to be healthy"

                          status=$(curl -s -k \
                            -H "Content-Type: application/json" \
                            -H "Authorization: Bearer $ARGOCD_TOKEN" \
                            http://argocd-server.argocd.svc.cluster.local/api/v1/applications/queue-worker | \
                            jq -r '.status.health.status')

                          echo "‚è≥ Status atual: $status"
                        done

                        echo "üöÄ Aplica√ß√£o queue-worker est√° Healthy!"
