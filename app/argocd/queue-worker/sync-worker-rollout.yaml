apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: sync-worker-rollout
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  metrics:
    - name: sync-worker
      # successCondition: result.exitCode == 0
      successCondition: result.stdout.contains("App queue-worker is Synced and Healthy")
      provider:
        job:
          spec:
            backoffLimit: 2
            template:
              spec:
                restartPolicy: "Never"
                volumes:
                  - name: argocd-token
                    secret:
                      secretName: argocd-api-token
                containers:
                  - name: trigger-sync
                    image: dwdraju/alpine-curl-jq
                    volumeMounts:
                      - name: argocd-token
                        mountPath: "/mnt/secrets"
                        readOnly: true
                    command:
                      - /bin/sh
                      - -c
                      - |
                        echo
                        echo "üîë Lendo token..."

                        ARGOCD_TOKEN=$(cat /mnt/secrets/ARGOCD_TOKEN)

                        echo
                        echo "üöö Disparando sync para aplica√ß√£o queue-worker üõ†Ô∏è"
                        echo

                        curl -s -X POST \
                          -H "Authorization: Bearer $ARGOCD_TOKEN" \
                          -H "Content-Type: application/json" \
                          http://argocd-server.argocd.svc.cluster.local/api/v1/applications/queue-worker/sync \
                          -o /dev/null -w "üö¶ Status code: %{http_code}\n"

                        echo
                        echo "‚è∞ Aguardando aplica√ß√£o estar Synced e Healthy..."

                        sleep 30

                        # status=""
                        # timeout=$((SECONDS + 300)); # 5 minutos
                        # while [ "$status" != "Healthy" ]; do
                        #   if [ $SECONDS -ge $timeout ]; then
                        #     echo
                        #     echo "‚ùå Timeout: aplica√ß√£o n√£o ficou Healthy ap√≥s 5 minutos"
                        #     exit 1
                        #   fi

                        #   sleep 10
                        #   # echo "‚è≥ Waiting for queue-worker to be healthy"

                        #   status=$(curl -s -k \
                        #     -H "Content-Type: application/json" \
                        #     -H "Authorization: Bearer $ARGOCD_TOKEN" \
                        #     http://argocd-server.argocd.svc.cluster.local/api/v1/applications/queue-worker | \
                        #     jq -r '.status.sync.status')

                        #   echo
                        #   echo "‚è≥ Sync Status atual: $status"
                        # done

                        for i in {1..30}; do
                          RESPONSE=$(curl -s \
                            -H "Authorization: Bearer $ARGOCD_TOKEN" \
                            -H "Content-Type: application/json" \
                            http://argocd-server.argocd.svc.cluster.local/api/v1/applications/queue-worker)

                          SYNC_STATUS=$(echo "$RESPONSE" | jq -r '.status.sync.status')
                          HEALTH_STATUS=$(echo "$RESPONSE" | jq -r '.status.health.status')

                          echo
                          echo "üîÑ Sync: $SYNC_STATUS | ‚ù§Ô∏è Health: $HEALTH_STATUS"

                          if [ "$SYNC_STATUS" = "Synced" ] && [ "$HEALTH_STATUS" = "Healthy" ]; then
                            echo
                            echo "üöÄ ‚úÖ  App queue-worker is Synced and Healthy!"
                            exit 0
                          fi

                          sleep 10
                        done

                        echo
                        echo "‚ùå Timeout esperando aplica√ß√£o sincronizar e ficar saud√°vel"
                        exit 1
